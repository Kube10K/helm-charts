---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-local-dns.fullname" . }}
  namespace: {{ .Values.kubeDnsNamespace }}
  labels:
    {{- include "node-local-dns.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "node-local-dns.selectorLabels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      annotations:
        checksum/configmaps: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "node-local-dns.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "node-local-dns.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      hostNetwork: true
      dnsPolicy: Default
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -health-port
            - {{ required "Must set .Values.healthPort" .Values.healthPort | quote }}

            {{- /* See kube-dns-upstream.yaml */}}
            - -upstreamsvc
            - {{ include "node-local-dns.fullname" . }}-upstream

            {{- if .Values.ipvsMode }}
            - -localip
            - {{ .Values.serviceIP }}
            {{- else }}
            - -localip
            - {{ .Values.serviceIP }},{{ .Values.coreDnsIP }}
            {{- end }}

            - -conf
            - /etc/Corefile

            - -metrics-listen-address
            - "0.0.0.0:{{ add .Values.metricsPort 100 }}"
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          securityContext:
            privileged: true

          {{- /* Definitely restart the service if it is not returning healthy. */}}
          livenessProbe:
            httpGet:
              host: {{ .Values.serviceIP }}
              path: /health
              port: {{ default "8080" .Values.healthPort }}
            initialDelaySeconds: 60
            timeoutSeconds: 5

          {{- /*
          The readinessProbe is not defined in the original source from
          Kubernetes. However, we DO define it to make sure that the pod comes
          up and is healthy before moving on to the next one. This way a bad
          configuration change will not break ALL of our DNS everywhre, but
          will just break at one pod.
          */}}
          readinessProbe:
            httpGet:
              host: {{ .Values.serviceIP }}
              path: /health
              port: {{ default "8080" .Values.healthPort }}
            initialDelaySeconds: 60
            timeoutSeconds: 5
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - name: config-volume
              mountPath: /etc/coredns
            - name: kube-dns-config
              mountPath: /etc/kube-dns
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: kube-dns-config
          configMap:
            name: kube-dns
            optional: true
        - name: config-volume
          configMap:
            name: {{ include "node-local-dns.fullname" . }}
            items:
              - key: {{ if .Values.ipvsMode }}Corefile.ipvs{{ else }}Corefile.iptabes{{- end }}
                path: Corefile.base
